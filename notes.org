#+TAGS: notes
#+AUTHOR: Guanghui Qu
#+STARTUP: overview, for taking some random notes
#+LATEX_HEADER: \usepackage{xltxtra}
#+LATEX_HEADER: \setmainfont{FangSong}
#+LATEX_HEADER: \usepackage{seqsplit}
#+TITLE: 零散笔记
#+OPTIONS: TeX:t LaTeX:t skip:nil d:nil tasks:nil pri:nil title:t
#+TAGS: { WORK(w) Emacs(e)  DREAM(d) OTHER(o)  PROJECT(p) MEETING(m)}


* Random notes

** Self brief introduction
Hello, everyone. Today I want to talk about org mode. So what is org mode? Org mode is a outline processor within Emacs.
 Org mode is for keeping notes, maintaining TODO lists, planning projects, and authoring documents with a fast and effective plain-text system.
With a Emacs version greater than 23, org mode is already a build-in package. It provides a rich set of markup language. We can use lists, links, headlines, tables to manage our contents.
We can also export all of my org files to pdf , plain text or latex files with just a few key strokes. Org mode can even help me to manage my agenda.
It's also my personal wiki system . I came across Emacs org mode a few months ago, but I really love it now. It's awesome! It really deserves the time to learn.

** How to learn a new language?
Find a project you are familiar with and reimplement it with the new language. After finish it, review the project to see the difference between the new language and the languages you used to using.

** Find the target
*** What you can be the best in the world at?
Instructors( have some confidence)
 best game client programmer(have a few confidence)
 best game server programmer?(no)
 best vim user?(have a lot confidence, but still need more)
 best Emacs user?(a few confidence)
 best c++ programmer?(not too much confidence)
 best blog post writer?(a few confidence)
*** What drives your "economic" engine.
Writing articles. (I have the ability to write well)
Develop games.( I am good at iterate something to make it better)
Teach others to learn game programming.
*** What you are deeply passionate about.
Learning useful stuff which can boost my productivity.(like ruby in web and Erlang in server)
+Learning anything new about vim.( speed up my programming speed)+  Why? Because Emacs is a better option.
Learing  anything new about Emacs.(management my personal life)
Let game programming is not a secret any more.(I love to share some new)

** 如何快速地学习
"http://mp.weixin.qq.com/s?__biz=MjAzNzMzNTkyMQ==&mid=208026768&idx=1&sn=6556761557ed251f2c4edfd7f28f9994&key=af154fdc40fed003cd7094c76a4bf50bb8eeff22986719f53ad0f20d6865f9643f42d9e2c545ac994ae56509ff31edb2&ascene=0&uin=MTIxOTIzODU2MA%3D%3D&devicetype=iMac+MacBookPro10%2C1+OSX+OSX+10.10.1+build(14B25)&version=11020012&pass_ticket=yL%2FziNX4ZJCQKHv%2Br5APHAKFi7j7l7tfW5P9%2FSvCfJmSD2T6q98Sc8QxyH%2F%2F0knv"
- 以专家为榜样，不必自己重新探索
- 解构技能，找出实现 80%效果的那 20%
- 不要一心二用
- 练习练习再练习！然后获得即时反馈
- 坚持，不要在低谷期放弃


***  Setup VPN on Ubuntu 14.04
[[https://www.digitalocean.com/community/tutorials/how-to-setup-your-own-vpn-with-pptp][How To Setup Your Own VPN With PPTP | DigitalOcean]]
***  Find two useful links: Command Line and Rials tutorials
[[http://conqueringthecommandline.com/book/curl][Chapter 3: cURL | Conquering the Command Line | Softcover.io]]
[[https://www.railstutorial.org/book][Frontmatter | Ruby on Rails Tutorial (3rd Ed.) | Softcover.io]]
*** Learn Ruby on Rails.                                             :Ruby:
[[http://www.reddit.com/r/learnprogramming/comments/1h3zr0/my_boyfriends_learn_to_program_manifesto_on/][My boyfriend's "learn to program manifesto" on learning Ruby Rails. : learnprogramming]]
[[http://webdesign.tutsplus.com/series/twitter-bootstrap-101/][Twitter Bootstrap 101 - Tuts+ Web Design Tutorials]]
[[http://code.tutsplus.com/tutorials/the-best-way-to-learn-ruby-on-rails--net-21820][The Best Way to Learn Ruby on Rails - Tuts+ Code Tutorial]]
[[http://www.schneems.com/post/25098659429/databases-rails-week-1-introduction/][Databases & Rails: Week 1 Introduction]]
[[http://www.schneems.com/ut-rails/][UT on Rails]]
[[http://stackoverflow.com/questions/55574/learning-ruby-on-rails][Learning Ruby on Rails - Stack Overflow]]
*** TODO [#C] Use Emacs to Download Youtube video                   :Emacs:

* SCIP notes
** Lesson one
*** Part one
- Black box abstraction.
- Write procedure which output procedure(write program which write program)
- How to control complexity.
- Conventions of interfaces.
- Design a new language to handle the complexity(highlight some details and hide some details)

*** Part two
- When someone show you a language, ask him: What's the primitives? What are the means to combination? What are the mean of abstraction?

* Quick notes
**  Learning R and Python for Big Data                                :Dream:
[[http://blog.revolutionanalytics.com/2014/03/emacs-ess-and-r-for-zombies.html][Emacs, ESS and R for Zombies]]

** 什么是你的核心竞争力？（专业知识，学习能力，沟通能力

** 计算机科学的本质？第一原则？知识结构？
本质是数据处理（数据结构与算法，大数据），可视化（图形学，GUI），网络

** Mac Name server issue: sudo networksetup -setdnsservers Ethernet 8.8.8.8

** This is a test note capture
  
 [2015-08-06 Thu 08:12]

**  找书的技巧
豆瓣的豆列是个好东西, 可惜不支持搜索功能, 使用 Google 的 CSE 可以自定义一
个搜索:

[Doulist Search](https://www.google.com/cse/publicurl?cx=009465131986610461898:ijyxpftyhlw)


有时候英文原版书籍实在是太贵, 或者根本就买不到绝版的, 只能去找下电子书
看, 这时候可以使用下面的网站:

[English PDF](http://gen.lib.rus.ec/)


看到有些中文书的推荐, 想知道内容是不是你想要的, 或者只想查看书中的某一
段话, 可以用下面的网站来找到相应的电子书:

[Chinese PDF](http://www.zhaofile.com/)

  
 [2015-08-10 Mon 17:53]

** TODO 必读书单                                                     :Dream:

Code Complete (2nd edition) by Steve McConnell
The Pragmatic Programmer
Structure and Interpretation of Computer Programs
The C Programming Language by Kernighan and Ritchie
Introduction to Algorithms by Cormen, Leiserson, Rivest & Stein
Design Patterns by the Gang of Four
Refactoring: Improving the Design of Existing Code
The Mythical Man Month
The Art of Computer Programming by Donald Knuth
Compilers: Principles, Techniques and Tools by Alfred V. Aho, Ravi Sethi and Jeffrey D. Ullman
Clean Code: A Handbook of Agile Software Craftsmanship by Robert C. Martin
Discrete Mathematics For Computer Scientists
  
 [2015-08-13 Thu 22:14]

** 编写自己的编译器.                                                 :Dream:
[[http://gnuu.org/2009/09/18/writing-your-own-toy-compiler/][Writing Your Own Toy Compiler Using Flex, Bison and LLVM (gnuu.org)]]

  
 [2015-08-14 Fri 10:06]

** 图形学相关应用                                                    :Dream:
## [[图形学书籍]]

[数学在图形学中的应用](http://www.math.zju.edu.cn/ligangliu/resources/graphics/math_for_graphics_Turk_CN.htm)

### 网络资料

http://www.geisswerks.com/ryan/FAQS/learn.html

http://www.arcsynthesis.org/gltut/

http://www.altdevblogaday.com/2011/05/10/so-you-want-to-be-a-graphics-programmer/

http://www.reddit.com/r/gamedev/comments/1475oj/whats_the_best_way_to_learn_graphic_creation_for/

http://www.scratchapixel.com/

http://www.glprogramming.com/red/chapter03.html

http://www.glprogramming.com/red/

http://en.wikipedia.org/wiki/Linear_algebra

http://en.wikipedia.org/wiki/Foundations_of_mathematics

http://blog.csdn.net/imyfriend/article/details/7823803

http://www.opengl.org/archives/resources/faq/technical/transformations.htm

http://relativity.net.au/gaming/java/Matrix4x4.html

https://github.com/mattdesl/lwjgl-basics/wiki

https://github.com/wantnon2/3DToolKit-for-cocos2dx

https://www.opengl.org/wiki/Rendering_Pipeline_Overview

http://www.cs.princeton.edu/~gewang/projects/darth/stuff/quat_faq.html#Q1

http://www.gamerendering.com/category/rendering-methods/shaders-rendering-methods/

http://inside.mines.edu/~gmurray/ArbitraryAxisRotation/

http://www.opengl-tutorial.org/

http://www.facstaff.bucknell.edu/mastascu/elessonshtml/Circuit/MatVecMultiply.htm

http://en.wikibooks.org/wiki/GLSL_Programming/Vector_and_Matrix_Operations

http://www.mathsisfun.com/algebra/vector-calculator.html

http://www.mathsisfun.com/algebra/vectors-dot-product.html

http://www.cocoachina.com/bbs/read.php?tid=181942

http://r3dux.org/2012/07/a-simple-glfw-fps-counter/

http://lazyfoo.net/tutorials/OpenGL/index.php

http://lazyfoo.net/tutorials/OpenGL/01_hello_opengl/mac/xcode/index.php

http://openglbook.com/the-book/

https://github.com/libgdx/libgdx/wiki/Quick-start

https://code.google.com/p/gl2-android/

http://www.badlogicgames.com/wordpress/?p=3161

http://pan.baidu.com/s/1hqsUrly

http://swarminglogic.com/jotting/2013_10_gamedev01

http://www.andersriggelsen.dk/glblendfunc.php

https://github.com/mattdesl/lwjgl-basics/wiki/2D-Pixel-Perfect-Shadows

  
 [2015-08-14 Fri 10:10]

** Erlang 学习                                                       :Dream:
1. http://stackoverflow.com/questions/1017017/what-is-the-best-way-to-learn-erlang

2. https://pragprog.com/book/jaerlang/programming-erlang

3. http://www.erlang.org/faq/getting_started.html

4. http://learnyousomeerlang.com/contents

5. http://www.myexception.cn/program/1252498.html

6. http://www.infoq.com/articles/vinoski-erlang-rest

7. http://steve.vinoski.net/blog/category/erlang/

8. https://github.com/jordillonch/eggs
  
 [2015-08-14 Fri 10:12]

** 一些不错的 Lisp 学习资料                                            :Emacs:
## Common Lisp
1. 环境搭建
https://www.youtube.com/watch?v=VnWVu8VVDbI

http://www.mohiji.org/2011/01/31/modern-common-lisp-on-osx/

## Emacs Lisp
- http://bzg.fr/learn-emacs-lisp-in-15-minutes.html

- http://nullprogram.com/blog/2013/02/06/

- http://www.emacswiki.org/emacs/LearnEmacsLisp

- http://ergoemacs.org/emacs/elisp.html

- http://www.emacswiki.org/emacs/EmacsLisp

- http://www.gnu.org/software/emacs/manual/html_node/elisp/

- http://learnxinyminutes.com/

- http://www.gnu.org/software/emacs/manual/html_mono/eintr.html

- http://www.emacswiki.org/emacs/ElispCookbook


# 两篇 lisp 文章

- http://www.defmacro.org/ramblings/lisp.html

- http://daiyuwen.freeshell.org/gb/rol/roots_of_lisp.html

  
 [2015-08-14 Fri 10:13]

** 一些不错的数学资料                                                 :Math:
- 免费的数学电子书: http://www.e-booksdirectory.com/mathematics.php

- [Math FAQ](http://www.j3d.org/matrix_faq/matrfaq_latest.html)

- [free linear agebra](http://joshua.smcvt.edu/linearalgebra/)

- [Math for Game Developers](https://www.youtube.com/watch?v=Q9FZllr6-wY&list=PLW3Zl3wyJwWOpdhYedlD-yCB7WQoHf-My&index=9)


## 博客
- [线代启示录](http://ccjou.wordpress.com/)

## 博客里面显示数学符号

- http://rypress.com/tutorials/mathml/basic-algebra.html
- http://tobilehman.com/blog/2012/07/18/mathjax-for-octopress/

  
 [2015-08-14 Fri 10:13]

** 一些不错的 OpenGLES 学习资料                                     :OpenGLES:
http://www.jayway.com/2009/12/03/opengl-es-tutorial-for-android-part-i/

http://www.absoluteblogger.com/2013/04/best-books-to-learn-android-application-development.html

http://www.learnopengles.com/opengl-es-2-for-android-printed-in-full-color/

http://www.rbgrn.net/content/54-getting-started-android-game-development

http://stackoverflow.com/questions/9937783/android-game-development

http://chimera.labs.oreilly.com/books/1234000000802/index.html

http://www.codeavengers.com/javascript/1#1.4

http://www.ozone3d.net/tutorials/bump_mapping.php#tangent_space

http://www.idevgames.com/forums/thread-8833.html

http://software.intel.com/en-us/articles/dynamic-resolution-rendering-on-opengl-es-2

http://software.intel.com/en-us/articles/setting-up-native-opengl-es-on-android-platforms

http://cyrilmottier.com/2013/06/27/a-productive-android-development-environment/

http://www.cocos2d-iphone.org/forum/topic/33478

http://www.cocos2d-iphone.org/forum/topic/27856

https://www.udacity.com/course/cs255

http://education-portal.com/articles/8_Free_Game_Design_and_Development_Courses_and_Resources_Online.html

http://howtomakeitinamsterdam.wordpress.com/

http://caminardespierto.blogspot.com/2010/11/how-to-build-3d-multiplayer-game.html

https://github.com/gitlabhq/gitlabhq

http://www.opengl.org/wiki/Texture

http://www.alcove-games.com/opengl-es-2-tutorials/lightmap-shader-fire-effect-glsl/

https://www.shadertoy.com/view/Xdf3zl

http://www.opengl.org/wiki/Uniform_(GLSL)

http://gamedev.stackexchange.com/questions/29260/transform-matrix-multiplication-order

http://www.opengl-tutorial.org/beginners-tutorials/tutorial-3-matrices/

http://3dgep.com/?p=5303

http://bussystemanalysis.blogspot.com/2014/02/android-programming-and-opengl-es.html

http://http.developer.nvidia.com/CgTutorial/cg_tutorial_chapter01.html

http://glsl.heroku.com/

http://www.songho.ca/opengl/gl_transform.html

http://www.glprogramming.com/red/index.html

https://www.youtube.com/watch?v=-tonZsbHty8&index=26&list=PLRwVmtr-pp06qT6ckboaOhnm9FxmzHpbY

https://www.youtube.com/watch?v=kOAbQf1gqtc&list=PL4288D6E84B4D414D

http://www.realtimerendering.com/blog/

http://svenandersson.se/2014/realtime-rendering-blogs.html

http://www.p1xelcoder.com/links/#Blogs

http://molecularmusings.wordpress.com/2013/05/02/adventures-in-data-oriented-design-part-3a-ownership/

http://gamedevcoder.wordpress.com/

http://www.raywenderlich.com/49955/blender-tutorial-for-beginners-how-to-make-a-mushroom

http://www.raywenderlich.com/48293/how-to-export-blender-models-to-opengl-es-part-1

http://compohub.net/

http://www.newgrounds.com/art/browse/category/pixel-art

http://www.newgrounds.com/audio/listen/567996

http://opengles3.com/learn/shading-language/vertex-shaders/

https://docs.google.com/a/cocos2d-x.org/spreadsheet/pub?key=0Aijk_rdV3j9qdGw5TS1MYnFPaVZmM3R0N0ZVdFhxeWc&single=true&gid=0&output=html

https://bitbucket.org/alfonse/gltut/src/1d1479cc7027f1e32c5adff748f3b296f1931d84/Tut%2006%20Objects%20in%20Motion/Rotations.cpp?at=default

http://stackoverflow.com/questions/8482327/learning-opengles-2-0-on-ios

http://www.learnopengles.com/opengl-es-resources-and-best-practices/

http://gamedev.stackexchange.com/questions/32876/good-resources-for-learning-modern-opengl-3-0-or-later

http://www.davidbishop.org/oglmeta

http://en.wikibooks.org/wiki/OpenGL_Programming

http://littlecheesecake.me/blog/13804700/opengles-shader

http://www.learnopengles.com/android-lesson-one-getting-started/

http://openglinsights.com/

http://www.antigrain.com/doc/introduction/introduction.agdoc.html#toc0002

http://www.learnopengles.com/

http://blog.manbolo.com/2012/11/20/using-xcode-opengl-es-frame-capture

https://developer.apple.com/library/mac/recipes/xcode_help-debugger/articles/debugging_opengl_es_frame.html

http://blog.csdn.net/wu4long/article/details/6126408

http://www.cocos2d-iphone.org/forums/topic/ccsprite-with-video-trivial-extension/

http://blog.csdn.net/langresser_king/article/details/14516879

http://www.marctenbosch.com/npr_edges/

http://stackoverflow.com/questions/8999304/opengl-es-shader-to-outline-2d-images

http://www.cs.rpi.edu/~cutler/classes/advancedgraphics/S12/final_projects/hutchins_kim.pdf

http://3dgep.com/?p=1815

http://www.xojo3d.com/pro001.php

http://www.ogre3d.org/tikiwiki/Quaternion+and+Rotation+Primer

http://antongerdelan.net/opengl/index.html

http://tomdalling.com/blog/modern-opengl/04-cameras-vectors-and-input/

http://www.realtimerendering.com/blog/webgl-debugging-and-profiling-tools/

http://www.falstad.com/mathphysics.html

http://www.euclideanspace.com/maths/algebra/matrix/index.htm

http://games.greggman.com/game/category/webgl/page/2/

https://user.xmission.com/~nate/opengl.html

http://www.xiaohanyu.me/oh-my-emacs/modules/ome-javascript.html

http://open.gl/depthstencils

http://ogldev.atspace.co.uk/index.html

http://lazyfoo.net/tutorials/OpenGL/26_the_stencil_buffer/index.php

http://lazyfoo.net/articles/article10/index.php

http://blog.csdn.net/ryfdizuo/article/details/8701284

http://www.flipcode.com/archives/Object_Outlining.shtml

- http://code.csdn.net/news/2820766

- http://pixelshaders.com/examples/noise.html

- http://freespace.virgin.net/hugo.elias/models/m_perlin.htm

- http://www.shaderific.com/glsl-functions/

- http://pixelshaders.com/external.html

  
 [2015-08-14 Fri 10:14]

** 一些不错的 OpenGL 学习资料                                       :OpenGLES:
### 网站链接

- http://open.gl/

- http://opengl.zilongshanren.com

- http://blog.db-in.com/cameras-on-opengl-es-2-x/

- https://courses.edx.org/c4x/BerkeleyX/CS-184.1x/asset/links.html

- [Learning Modern OpenGL Programming](http://www.arcsynthesis.org/gltut/)


- [tomdalling's modern-opengl/](http://tomdalling.com/blog/category/modern-opengl/)

- [scratchapixel](http://www.scratchapixel.com/)

- [lazyfoo OpenGL](http://lazyfoo.net/tutorials/OpenGL/index.php)

- [antongerdelan opengl](http://antongerdelan.net/opengl/index.html)

- [ogldev](http://ogldev.atspace.co.uk/)

- [lighthouse3d](http://www.lighthouse3d.com/tutorials/)

- [songho](http://www.songho.ca/)

- [duriansoftware modern opengl](http://duriansoftware.com/joe/An-intro-to-modern-OpenGL.-Table-of-Contents.html)

  
 [2015-08-14 Fri 10:14]

** 一些不错的 Org-mode 学习资料                               :Emacs:Org:
http://forum.ubuntu.com.cn/viewtopic.php?t=395158

http://members.optusnet.com.au/~charles57/GTD/gtd_workflow.html

http://www.mastermindcn.com/2012/02/org_mode_quite_a_life/

http://blog.jr0cket.co.uk/2013/08/manage-dev-life-with-emacs-org-mode.html

http://bzg.fr/blogging-from-emacs.html

http://blog.jr0cket.co.uk/2013/10/create-cool-slides--Org-mode-Revealjs.html

http://blog.jr0cket.co.uk/2013/09/create-html5-presentations-emacs-revealjs.html

https://plus.google.com/102778904320752967064/posts

http://members.optusnet.com.au/~charles57/GTD/remember.html

http://kanedou.me/2010/10/note-with-orgmode/

http://blog.gabrielsaldana.org/quick-note-taking-with-emacs-and-org-capture/

http://orgmode.org/worg/org-gtd-etc.html

http://www.youtube.com/watch?v=nsGYet02bEk

http://emacser.com/org-mode.htm

http://www.youtube.com/watch?v=ht4JtEbFtFI&feature=c4-overview-vl&list=PL7E11B34616530F5E

http://orgmode.org/worg/org-tools/index.html

http://orgmode.org/worg/org-faq.html

http://orgmode.org/worg/

http://orgmode.org/worg/org-tutorials/

http://orgmode.org/worg/org-tutorials/orgtutorial_dto.html

http://www.chinaxing.org/linux/2013/03/30/emacs-org-misc.html

http://www.cnblogs.com/holbrook/archive/2012/04/12/2444992.html

http://newartisans.com/2007/08/using-org-mode-as-a-day-planner/

http://chaoslawful.info/archives/59

http://www.railsonmaui.com/blog/2013/04/27/octopress-setup-with-github-and-org-mode/

http://orgmode.org/

http://www.headhole.org/organisation/2012/08/22/org-mode-gtd-and-the-pomodoro-technique/

http://doc.norang.ca/org-mode.html

http://www.cnblogs.com/chenfanyu/category/442296.html

http://dayigu.github.io/WhyUseOrgModeToWriteBlog.html

http://doc.norang.ca/org-mode.org


http://everet.org/2012/12/screenshot-and-image-paste-in-emacs-when-writing-markdown.html


  
 [2015-08-14 Fri 10:15]

** 一些不错的 shell 学习资料                                           :shell:
1. Shell 编程指南

http://tldp.org/HOWTO/Bash-Prog-Intro-HOWTO.html#toc1

编译静态库
https://github.com/kivy/kivy-ios/blob/master/tools/environment.sh


[Advanced shell programming](http://www.tldp.org/LDP/abs/html/index.html)

[Learn shell the hard way](http://cli.learncodethehardway.org/book/ex1.html#faq)

[learn linux the hard way](http://nixsrv.com/llthw)

[http://www.catonmat.net/blog/bash-one-liners-explained-part-one/](http://www.catonmat.net/blog/bash-one-liners-explained-part-one/)

[Bash reference manual](http://www.gnu.org/software/bash/manual/bashref.html)

2. shell 神器： [percol](https://github.com/mooz/percol)

3. tmux, tig, oh-my-zsh 这些都是神器

[linux command line](http://linuxcommand.org/index.php)

## shell Tips
使用 Vim 编辑 CMakeLists.txt 的时候，如果要列出所有的源文件，可以这样：

`:r !find . -name *.cpp`

## 打包 tar.xz 文件

tar cfJ xxxx.tar.xz file-path

## shell 读取配置文件

http://devdragon.com/2012/09/reading-java-style-properties-files-in-bash-scripts/

http://www.unix.com/shell-programming-and-scripting/136213-reading-configuration-files-bash-best-way.html

## shelll 资源整理

1. IFS 

http://bash.cyberciti.biz/guide/$IFS

  
 [2015-08-14 Fri 10:16]

** 一些 sed 的资料                                                       :sed:
1.  http://robots.thoughtbot.com/sed-102-replace-in-place

2. http://www.grymoire.com/unix/sed.html

3. http://www.gentoo.org/doc/en/articles/l-sed1.xml


##删除文件里面的内容

- http://en.kioskea.net/faq/1451-sed-delete-one-or-more-lines-from-a-file

- http://stackoverflow.com/questions/8323287/how-can-i-use-sed-to-delete-2-lines-after-match-matches

  
 [2015-08-14 Fri 10:16]

** 一些 WebGL 的学习资料                                               :webgl:
http://learningwebgl.com/blog/

https://www.youtube.com/watch?v=me3BviH3nZc

http://www.khronos.org/webgl/

http://www.khronos.org/files/webgl/webgl-reference-card-1_0.pdf

http://nullprogram.com/blog/2013/06/10/

http://greggman.github.io/webgl-fundamentals/

http://games.greggman.com/game/webgl-fundamentals/

http://learningwebgl.com/blog/?page_id=1217

https://github.com/GoodBoyDigital/pixi.js

http://threejs.org/

http://www.goodboydigital.com/pixi-js-storm-webgl-demo/

http://solarlune-gameup.blogspot.com/search/label/OpenGL%20Tutorials

http://bjartr.blogspot.com/2009/10/webgl-webglu-demo-in-50-lines.html

https://www.khronos.org/registry/webgl/specs/1.0.2/

https://www.khronos.org/registry/webgl/specs/latest/2.0/

http://www.html5rocks.com/en/tutorials/webgl/webgl_fundamentals/

http://tutorialzine.com/2013/09/20-impressive-examples-for-learning-webgl-with-three-js/

http://webglfundamentals.org/

http://glmatrix.net/docs/2.2.0/symbols/mat4.html#.translate

https://developer.tizen.org/dev-guide/2.2.1/org.tizen.web.appprogramming/html/tutorials/suppl_tutorial/webgl_tutorial.htm

http://www.beginningwebgl.com/blog/2013-09-26/using-glmatrix-2-book-code#.U6jW6JSSz04

http://www.beginningwebgl.com/resources

https://github.com/gpjt/webgl-lessons

https://developer.mozilla.org/en-US/docs/Web/WebGL

http://blog.tojicode.com/2011/10/building-game-part-1-setup.html

http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/

http://rodrigo-silveira.com/webgl-3d-demos/

  
 [2015-08-14 Fri 10:17]

** Vim 学习资料                                                         :vim:
## 网络资源

- http://stackoverflow.com/questions/3723493/latex-and-vim-usage

- http://macshuo.com/?p=535

- http://usevim.com/

- http://stackoverflow.com/questions/1218390/what-is-your-most-productive-shortcut-with-vim

- http://oli.me.uk/2013/06/29/equipping-vim-for-javascript/

- http://danielmiessler.com/study/vim/

- https://zschoche.org/debugging-in-vim/

- http://astonj.com/tech/learning-vim/

- http://jrmiii.com/attachments/Vim.pdf

- http://swaroopch.com/notes/vim_zh-cn-%E7%BC%96%E5%86%99%E8%84%9A%E6%9C%AC/

- http://vimregex.com/

- https://github.com/google/maktaba

- https://github.com/thoughtstream/Damian-Conway-s-Vim-Setup/blob/master/.vimrc

- http://showmedo.com/videotutorials/series?name=0oSagogCe

- http://www.oualline.com/vim-cook.html

- http://www.douban.com/note/145491549/

- https://www.artandlogic.com/blog/2013/06/vim-for-python-development/

- http://www.onitato.com/pep8-checking-in-vim.html

- http://blog.xeonxu.info/blog/2013/05/14/gao-liao-ge-ban-zi-dong-hua-de-vim/

- http://stackoverflow.com/questions/18693526/vim-completion-with-youcompleteme-on-windows

- http://pascalprecht.github.io/2014/03/18/why-i-use-vim/

- http://stevelosh.com/blog/2011/09/writing-vim-plugins/



## Vim 技巧

- 往文件里面的每一行后面插入一个新的空行

>  :%s/.*\n/\0\r/g

## 安装 Vim
1. 在 centos 6.4 上面安装 vim7.4

https://stavrovski.net/blog/how-to-build-and-install-vim-74-from-source-on-centos6rhel6

  
 [2015-08-14 Fri 10:17]

** 游戏算法                                                      :algorithm:
1. A*算法：

- http://www.policyalmanac.org/games/aStarTutorial.htm
- http://gamedevelopment.tutsplus.com/tutorials/speed-up-a-star-pathfinding-with-the-jump-point-search-algorithm--gamedev-5818

2. 行为树
http://web.archive.org/web/20140402204854/http://www.altdevblogaday.com/2011/02/24/introduction-to-behavior-trees/

3. planing Tree
http://alumni.media.mit.edu/~jorkin/goap.html

  
 [2015-08-14 Fri 10:18]

** 算法学习资料                                                  :algorithm:
http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-837-computer-graphics-fall-2003/

http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2012/


http://cstheory.stackexchange.com/questions/19759/core-algorithms-deployed/19773#19773


## 在线 OJ

- https://oj.leetcode.com/ (user: 0owen)

  
 [2015-08-14 Fri 10:18]

** 10 本最好的图形学书籍                                              :DREAM:
[[http://www.amazon.com/10-Best-Computer-Graphics-Books/lm/4WO0N1AG8AJN][Amazon.com: 10 Best 3D Computer Graphics Books]]
  
 [2015-08-14 Fri 10:19]

** 学习计算机网络知识                                                :DREAM:
### 网络资源：

http://www.haogongju.net/art/1290027

http://www.cppblog.com/API/archive/2012/08/07/186605.html

http://bbs.html5china.com/forum-32-1.html


### Books

- [学习网络编程的入门书推荐（知乎）](http://www.zhihu.com/question/19923329/answer/21548546?utm_source=weibo&utm_medium=weibo_share&utm_content=share_answer&utm_campaign=share_button)

- [enet](http://enet.bespin.org/Features.html)

- [libev](http://software.schmorp.de/pkg/libev.html)

  
 [2015-08-14 Fri 10:20]

* Setup VPN
"http://blog.fengqijun.me/vpn/2015/03/08/l2tp-ipsec-vpn-on-ubuntu-14/"

* 骨骼动画评审
** CCBone 和 CCBoneNode 是什么关系？同样的逻辑代码在一个仓库里面出现两次是否合理？
** CCBoneNode 继承至 Node 有点太重度了，可以考虑继承至 Ref, 具体可以参考 CCBone3D 的实现
** static BoneNode* create(const int &length);  基本数据类型不需要 const int&
** 有问题的 API
*** 含义不明
    virtual void display(SkinNode* skin, bool hideOthers = false);
    virtual cocos2d::Vector<SkinNode*> getDisplaying() const;
** 缺少 doxgen 文档注释
** 暴露的接口是否完整，接口意义是否清晰，use-case 是怎样的？
** Bone 的 length, width, rackShow 是什么意思？
** 是否考虑了多个摄相机以及在 3D 场景里面的显示。
** CustomCommand 是不被推荐使用的，能否在 UI 的容器里面正确使用，是否被正确 clipping
** 代码里面应该要移除 EMSCRIPTEN 的宏
** _groupCommand 在 CCSkeletonNode 里面并没有被使用到。


* Ngix
** 设置文件目录可以访问

#+BEGIN_SRC sh
  autoindex on;
#+END_SRC
** 设置服务器 ip 转发

#+BEGIN_SRC sh
  server{
      server_name  4gamers.cn;
      rewrite ^(.*) http://zilongshanren.com$1 permanent;
  }
#+END_SRC



* DONE 经验教训
CLOSED: [2015-08-10 Mon 09:48] SCHEDULED: <2015-08-02 Sun>
- State "DONE"       from "TODO"       [2015-08-10 Mon 09:48]
** 对合伙创业认识不够
** 对代码敬畏不足
** 对兼容性重视有限
** 对知识管理不甚关心
** 对技术过分依赖
** 对工作和生活平衡不够关心
